{
	"include": [
		"src/CaretTracker.ts"
	],
	"compilerOptions": {
		"target": "es2016",
		/* Set the JavaScript language version for emitted JavaScript and include compatible library declarations. */
		"lib": [
			"dom",
			"es2016"
		],
		/* Specify a set of bundled library declaration files that describe the target runtime environment. */
		"module": "es6",
		/* Specify what module code is generated. */
		"rootDir": "./src",
		/* Specify the root folder within your source files. */
		"moduleResolution": "nodenext",
		/* Specify how TypeScript looks up a file from a given module specifier. */
		"allowImportingTsExtensions": true,
		/* Allow imports to include TypeScript file extensions. Requires '--moduleResolution bundler' and either '--noEmit' or '--emitDeclarationOnly' to be set. */

		/* Emit */
		"declaration": true,
		/* Generate .d.ts files from TypeScript and JavaScript files in your project. */
		"declarationMap": true,
		/* Create sourcemaps for d.ts files. */
		"emitDeclarationOnly": true,
		/* Specify a file that bundles all outputs into one JavaScript file. If 'declaration' is true, also designates a file that bundles all .d.ts output. */
		"outDir": "./dist",
		/* Specify an output folder for all emitted files. */

		/* Interop Constraints */
		"forceConsistentCasingInFileNames": true,
		/* Ensure that casing is correct in imports. */

		/* Type Checking */
		"strict": true,
		/* Enable all strict type-checking options. */
		"noImplicitAny": true,
		/* Enable error reporting for expressions and declarations with an implied 'any' type. */
		"strictNullChecks": true,
		/* When type checking, take into account 'null' and 'undefined'. */
		"strictFunctionTypes": true,
		/* When assigning functions, check to ensure parameters and the return values are subtype-compatible. */
		"strictBindCallApply": true,
		/* Check that the arguments for 'bind', 'call', and 'apply' methods match the original function. */
		"strictPropertyInitialization": true,
		/* Check for class properties that are declared but not set in the constructor. */
		"strictBuiltinIteratorReturn": true,
		/* Built-in iterators are instantiated with a 'TReturn' type of 'undefined' instead of 'any'. */
		"noImplicitThis": true,
		/* Enable error reporting when 'this' is given the type 'any'. */
		"useUnknownInCatchVariables": true,
		/* Default catch clause variables as 'unknown' instead of 'any'. */
		"alwaysStrict": true,
		/* Ensure 'use strict' is always emitted. */
		"noUnusedLocals": true,
		/* Enable error reporting when local variables aren't read. */
		"noUnusedParameters": true,
		/* Raise an error when a function parameter isn't read. */
		"exactOptionalPropertyTypes": true,
		/* Interpret optional property types as written, rather than adding 'undefined'. */
		"noImplicitReturns": true,
		/* Enable error reporting for codepaths that do not explicitly return in a function. */
		"noFallthroughCasesInSwitch": true,
		/* Enable error reporting for fallthrough cases in switch statements. */
		"noUncheckedIndexedAccess": true,
		/* Add 'undefined' to a type when accessed using an index. */
		"noImplicitOverride": true,
		/* Ensure overriding members in derived classes are marked with an override modifier. */
		"noPropertyAccessFromIndexSignature": true,
		/* Enforces using indexed accessors for keys declared using an indexed type. */
		"allowUnusedLabels": false,
		/* Disable error reporting for unused labels. */
		"allowUnreachableCode": false,
		/* Disable error reporting for unreachable code. */

		/* Completeness */
		// "skipDefaultLibCheck": true,                      /* Skip type checking .d.ts files that are included with TypeScript. */
		"skipLibCheck": true
		/* Skip type checking all .d.ts files. */
	}
}
